AWSTemplateFormatVersion: 2010-09-09
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: RDS PARAMETERS
        Parameters:
          - DBInstanceName
          - DBSchemaName
          - DBSize
          - DBVersion
          - DeletionProtection
          - MultiAZ
          - PreferredBackupWindow
          - PreferredMaintenanceWindow
          - DBSecurityGroup
          - PSsmSubnetIds
          - PSsmNRSubnetCIDRs
Mappings:
  Plans:
    micro:
      Instance: db.t4g.micro
      StorageType: gp2
      MinStorage: 20
      MaxStorage: 100
    small:
      Instance: db.t4g.small
      StorageType: gp2
      MinStorage: 20
      MaxStorage: 200
    medium:
      Instance: db.t4g.medium
      StorageType: gp2
      MinStorage: 20
      MaxStorage: 400
    large:
      Instance: db.m6g.large
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 1000
    large-mem:
      Instance: db.r6g.large
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 1000
    xlarge:
      Instance: db.m6g.xlarge
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 2000
    xlarge-mem:
      Instance: db.r6g.xlarge
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 2000
    2xlarge:
      Instance: db.m6g.2xlarge
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 4000
    2xlarge-mem:
      Instance: db.r6g.2xlarge
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 4000

Parameters:
  DBSize:
    Description: >-
      T-shirt size of the RDS instance regarding vCPU, memory, storage and
      networking, see https://wiki.swisscom.com/x/MzSvIQ
    Type: String
    AllowedValues:
      - micro
      - small
      - medium
      - large
      - large-mem
      - xlarge
      - xlarge-mem
      - 2xlarge
      - 2xlarge-mem
  DBVersion:
    Default: '13.4'
    Description: PostgreSQL Version
    Type: String
    AllowedValues:
      - '13.4'
      - '13.5'
      - '14.1'
  DBSchemaName:
    Default: main
    Description: Initial database schema name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBInstanceName:
    Description: RDS instance name
    Type: String
    MinLength: '1'
    MaxLength: '64'
  DBSecurityGroup:
    Description: >-
      Specify the security group to be used by RDS, if not provide a default
      will get created
    Type: String
    Default: ''
  MultiAZ:
    Description: >-
      Specify whether the instance is to be deployed in multiple availability
      zones (high availability, recommended for production)
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: must be true or false.
  PSsmSubnetIds:
    Description: >-
      Subnet types in which the instance is to be placed. (possible values: /platform/sharedvpc/private_subnets or /platform/sharedvpc/nr_private_subnets)
    Type: AWS::SSM::Parameter::Value<List<String>>
    Default: /platform/sharedvpc/private_subnets
    AllowedValues:
      - /platform/sharedvpc/nr_private_subnets
      - /platform/sharedvpc/private_subnets
  PSsmNRSubnetCIDRs:
    Description: >-
      LEAVE AS IT IS - Default SG Subnet cidr ranges from non routable subnets of shared VPC.
    Type: AWS::SSM::Parameter::Value<List<String>>
    Default: /platform/sharedvpc/nr_private_subnets_cidrs
    AllowedValues:
      - /platform/sharedvpc/nr_private_subnets_cidrs
  PreferredBackupWindow:
    Default: '00:15-01:00'
    Description: >-
      The daily time range during which automated backups are created, specified
      in UTC; at least 30 minutes required; must not overlap with maintenance
      window
    Type: String
  PreferredMaintenanceWindow:
    Default: 'Sun:01:15-Sun:03:00'
    Description: >-
      The weekly time range during which system maintenance and minor version
      upgrades can occur, in UTC; at least one hour required; must not overlap
      with backup window
    Type: String
  PSsmEnvironment:
    Description: Environment from the SSM parameter
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /platform/account/env
    AllowedValues:
      - /platform/account/env
  DeletionProtection:
    Default: true
    Description: enable database to be protected from accidental deletion
    Type: String
    AllowedValues:
      - true
      - false
  KMSArnForSecretManager:
    Type: String
    Description: Enter KMS key (symmetric) arn (Format arn:aws:kms:<region>:<account-ID>:key/<key-id>) to be used for encrypting secrets
    ConstraintDescription: format should be arn:aws:kms:<region>:<account-ID>:key/<key-id>
    AllowedPattern: (^arn\:aws\:kms\:.+)
  KMSArnForDB:
    Type: String
    Description: Enter KMS key (symmetric) arn (Format arn:aws:kms:<region>:<account-ID>:key/<key-id>) to be used for encrypting DB
    ConstraintDescription: format should be arn:aws:kms:<region>:<account-ID>:key/<key-id>
    AllowedPattern: (^arn\:aws\:kms\:.+)

Conditions:

  IS-No-SG: !Equals 
    - !Ref DBSecurityGroup
    - ''

  IS-SG: !Not 
    - !Equals 
      - !Ref DBSecurityGroup
      - ''

  IS-Not-Dev: !Not
    - !Equals 
      - !Ref PSsmEnvironment
      - "development"
  
  IS-Dev: !Equals 
    - !Ref PSsmEnvironment
    - "development"

  IS-No-SG-AND-Not-Dev: !And
    - !Condition IS-No-SG
    - !Condition IS-Not-Dev
  
  IS-No-SG-AND-Dev: !And
    - !Condition IS-No-SG
    - !Condition IS-Dev

Resources:
  DBSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub ${DBInstanceName}-${PSsmEnvironment}-secret
      Description: RDS secret
      GenerateSecretString:
        SecretStringTemplate: '{"username": "rdsadministrator"}'
        GenerateStringKey: password
        PasswordLength: 32
        ExcludeCharacters: '"@/\'
      KmsKeyId: !Ref KMSArnForSecretManager
      Tags:
        - Key: 'sc:name'
          Value: !Sub '${DBInstanceName}-${PSsmEnvironment}-secret'
        - Key: 'sc:app-uuid'
          Value: '{{resolve:ssm:/platform/account/app-uuid}}'
        - Key: 'sc:env'
          Value: '{{resolve:ssm:/platform/account/env}}'

  DefaultDBSecurityGroupDev:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: IS-No-SG-AND-Dev
    Properties:
      GroupDescription: Open RDS database access
      VpcId: !Sub 
        - '{{resolve:ssm:/platform/sharedvpc/${Environment}/vpc_id}}'
        - Environment: !Ref PSsmEnvironment
      SecurityGroupEgress:
        - IpProtocol: tcp          
          FromPort: 3306   
          ToPort: 3306
          CidrIp: 0.0.0.0/0
          Description: Default Egress rule for DbSecurity group dev
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Select [0, !Ref PSsmNRSubnetCIDRs ]
          Description: "NR-private subnet 1 cidr range."
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Select [1, !Ref PSsmNRSubnetCIDRs ]
          Description: "NR-private subnet 2 cidr range."
      Tags:
        - Key: 'sc:name'
          Value: !Join ['.', [ !Ref AWS::StackName, !Ref PSsmEnvironment, !Ref AWS::Region, "sg-rds", !Sub '{{resolve:ssm:/platform/sharedvpc/${PSsmEnvironment}/vpc_id}}']]
        - Key: 'sc:app-uuid'
          Value: '{{resolve:ssm:/platform/account/app-uuid}}'
        - Key: 'sc:env'
          Value: '{{resolve:ssm:/platform/account/env}}'
  
  DefaultDBSecurityGroupStageProd:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: IS-No-SG-AND-Not-Dev
    Properties:
      GroupDescription: Open RDS database access
      VpcId: !Sub 
        - '{{resolve:ssm:/platform/sharedvpc/${Environment}/vpc_id}}'
        - Environment: !Ref PSsmEnvironment
      SecurityGroupEgress:
        - CidrIp: 127.0.0.1/32
          IpProtocol: "-1" 
      Tags:
        - Key: 'sc:name'
          Value: !Join ['.', [ !Ref AWS::StackName, !Ref PSsmEnvironment, !Ref AWS::Region, "sg-rds", !Sub '{{resolve:ssm:/platform/sharedvpc/${PSsmEnvironment}/vpc_id}}']]
        - Key: 'sc:app-uuid'
          Value: '{{resolve:ssm:/platform/account/app-uuid}}'
        - Key: 'sc:env'
          Value: '{{resolve:ssm:/platform/account/env}}'

  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: RDS subnet group
      SubnetIds: !Ref PSsmSubnetIds
      Tags:
        - Key: 'sc:name'
          Value: !Sub '${DBInstanceName}-${PSsmEnvironment}-subnetgroup'
        - Key: 'sc:app-uuid'
          Value: '{{resolve:ssm:/platform/account/app-uuid}}'
        - Key: 'sc:env'
          Value: '{{resolve:ssm:/platform/account/env}}'

  MainDB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBName: !Ref DBSchemaName
      AllocatedStorage: !FindInMap 
        - Plans
        - !Ref DBSize
        - MinStorage
      MaxAllocatedStorage: !FindInMap 
        - Plans
        - !Ref DBSize
        - MaxStorage
      StorageType: !FindInMap 
        - Plans
        - !Ref DBSize
        - StorageType
      DBInstanceClass: !FindInMap 
        - Plans
        - !Ref DBSize
        - Instance
      DBInstanceIdentifier: !Ref DBInstanceName
      Engine: postgres
      EngineVersion: !Ref DBVersion
      Port: 5432
      MasterUsername: !Join 
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref DBSecret
          - ':SecretString:username}}'
      MasterUserPassword: !Join 
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref DBSecret
          - ':SecretString:password}}'
      MultiAZ: !Ref MultiAZ
      DeletionProtection: !Ref DeletionProtection
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 14
      EnableCloudwatchLogsExports:
        - postgresql
        - upgrade
      EnableIAMDatabaseAuthentication: true
      EnablePerformanceInsights: true
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      PubliclyAccessible: false
      StorageEncrypted: true
      KmsKeyId: !Ref KMSArnForDB
      VPCSecurityGroups:
        'Fn::If':
          - IS-SG
          - 
            - !Ref DBSecurityGroup
          - 
            - !If [IS-Not-Dev, !Ref DefaultDBSecurityGroupStageProd, !Ref DefaultDBSecurityGroupDev] 
      DBSubnetGroupName: !Ref DBSubnetGroup
      Tags:
        - Key: 'sc:name'
          Value: !Sub '${DBInstanceName}-${PSsmEnvironment}-rds'
        - Key: 'sc:app-uuid'
          Value: '{{resolve:ssm:/platform/account/app-uuid}}'
        - Key: 'sc:env'
          Value: '{{resolve:ssm:/platform/account/env}}'
  DBSecretAttachment:
    Type: 'AWS::SecretsManager::SecretTargetAttachment'
    Properties:
      SecretId: !Ref DBSecret
      TargetId: !Ref MainDB
      TargetType: 'AWS::RDS::DBInstance'

Outputs:
  ConnectionString:
    Description: JDBC connection string for the initial database
    Value: !Join 
      - ''
      - - 'jdbc:postgresql://'
        - !GetAtt 
          - MainDB
          - Endpoint.Address
        - ':'
        - !GetAtt 
          - MainDB
          - Endpoint.Port
        - /
        - !Ref DBSchemaName
  CredentialsSecret:
    Description: Secret ARN that holds admin username and password for the RDS instance
    Value: !Ref DBSecret
  DBSecurityGroupID:
    Description: 'Database security group Id, will come handy for traffic accesss'
    Value:
      'Fn::If':
        - IS-SG
        - !Ref DBSecurityGroup
        - !If [ IS-Not-Dev, !GetAtt DefaultDBSecurityGroupStageProd.GroupId ,!GetAtt DefaultDBSecurityGroupDev.GroupId ] 