Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc

  VpcPublicSubnet1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cfn:subnet-name
          Value: Public
        - Key: aws-cfn:subnet-type
          Value: Public
        - Key: Name
          Value: OpenSearchStack/Vpc/PublicSubnet1
  
  VpcPublicSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc/PublicSubnet1

  VpcPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable
      SubnetId:
        Ref: VpcPublicSubnet1Subnet

  VpcPublicSubnet1DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIG
    DependsOn:
      - VpcVPCGW

  VpcPublicSubnet1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc/PublicSubnet1

  VpcPublicSubnet1NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnet1Subnet
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet1
          - AllocationId
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc/PublicSubnet1

  VpcPublicSubnet2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cfn:subnet-name
          Value: Public
        - Key: aws-cfn:subnet-type
          Value: Public
        - Key: Name
          Value: OpenSearchStack/Vpc/PublicSubnet2

  VpcPublicSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc/PublicSubnet2

  VpcPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable
      SubnetId:
        Ref: VpcPublicSubnet2Subnet

  VpcPublicSubnet2DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIG
    DependsOn:
      - VpcVPCGW

  VpcPublicSubnet2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc/PublicSubnet2

  VpcPublicSubnet2NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnet2Subnet
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet2
          - AllocationId
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc/PublicSubnet2

  VpcPrivateSubnet1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cfn:subnet-name
          Value: Private
        - Key: aws-cfn:subnet-type
          Value: Private
        - Key: Name
          Value: OpenSearchStack/Vpc/PrivateSubnet1

  VpcPrivateSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc/PrivateSubnet1

  VpcPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTable
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet

  VpcPrivateSubnet1DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet1NATGateway

  VpcPrivateSubnet2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cfn:subnet-name
          Value: Private
        - Key: aws-cfn:subnet-type
          Value: Private
        - Key: Name
          Value: OpenSearchStack/Vpc/PrivateSubnet2

  VpcPrivateSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc/PrivateSubnet2

  VpcPrivateSubnet2RouteTableAssociationA89CAD56:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTable
      SubnetId:
        Ref: VpcPrivateSubnet2Subnet

  VpcPrivateSubnet2DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet2NATGateway

  VpcIG:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: OpenSearchStack/Vpc

  VpcVPCGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc
      InternetGatewayId:
        Ref: VpcIG

  DomainSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for domain Domain
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc

  Domain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      ClusterConfig:
        DedicatedMasterEnabled: false
        InstanceCount: 3
        InstanceType: r5.large.search
        ZoneAwarenessConfig:
          AvailabilityZoneCount: 2
        ZoneAwarenessEnabled: true
      CognitoOptions:
        Enabled: false
      DomainEndpointOptions:
        EnforceHTTPS: false
        TLSSecurityPolicy: Policy-Min-TLS-1-0-2019-07
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 10
        VolumeType: gp2
      EncryptionAtRestOptions:
        Enabled: false
      EngineVersion: OpenSearch_1.0
      LogPublishingOptions: {}
      NodeToNodeEncryptionOptions:
        Enabled: false
      VPCOptions:
        SecurityGroupIds:
          - Fn::GetAtt:
              - DomainSecurityGroup
              - GroupId
        SubnetIds:
          - Ref: VpcPrivateSubnet1Subnet
          - Ref: VpcPrivateSubnet2Subnet
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete