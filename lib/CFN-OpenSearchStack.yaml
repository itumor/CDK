AWSTemplateFormatVersion: 2010-09-09
Description: OpenSearch is a distributed, open-source search and analytics suite used for a broad set of use cases like real-time application monitoring, log analytics, and website search.  
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    -
      Label:
        default: 'OpenSearch Parameters'
      Parameters:
      - DomainName
      - EngineVersion
#      - EBSEnabled
      - EBSVolumeSize
      - ClusterInstanceCount
      - ClusterInstanceType
#      - DedicatedMasterCount
#      - DedicatedMasterType
      - opSecurityGroup
      - PSsmEnvironment
      - KMSArnForSecretManager
#      - KMSArnForLogs
      - PSsmSubnetIds
      - PSsmNRSubnetCIDRs

#-------------------------------------------------------Parameters------------------------------------------------------#

Parameters:
  DomainName:
    Description: 'A name for the Amazon OpenSearch domain.'
    Type: String
    Default: 'domainname'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
#  EBSEnabled:
#    Description: 'Specifies whether Amazon EBS volumes are attached to data nodes in the Amazon ES domain (some instance types come with instance store that you can use instead).'
#    Type: String
#    AllowedValues: [true, false]
#    Default: true
  EBSVolumeSize:
    Description: 'The size of the EBS volume for each data node. The minimum and maximum size of an EBS volume depends on the EBS volume type and the instance type to which it is attached.'
    Type: Number
    Default: 10
  EngineVersion:
    Description: 'Elasticsearch version'
    Type: String
    Default: 'OpenSearch_1.2'
    AllowedValues: ["OpenSearch_1.2","OpenSearch_1.1","OpenSearch_1.0","Elasticsearch_7.10","Elasticsearch_7.9","Elasticsearch_7.8","Elasticsearch_7.7","Elasticsearch_7.4","Elasticsearch_7.1","Elasticsearch_6.8","Elasticsearch_6.7","Elasticsearch_6.5","Elasticsearch_6.4","Elasticsearch_6.3","Elasticsearch_6.2","Elasticsearch_6.0","Elasticsearch_5.6","Elasticsearch_5.5","Elasticsearch_5.3","Elasticsearch_5.1","Elasticsearch_2.3","Elasticsearch_1.5"] # aws opensearch list-versions --query "Versions[]" 
  ClusterInstanceCount:
    Description: 'The number of data nodes (instances) to use in the Amazon ES domain.'
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 80
  ClusterInstanceType:
    Description: 'The instance type for your data nodes.'
    Type: 'String'
    Default: 'small-mem'
    AllowedValues:
      - xsmall
      - small
      - medium
      - large
      - xlarge
      - xsmall-mem
      - small-mem
      - medium-mem
      - large-mem
      - xlarge-mem
#  DedicatedMasterCount:
#    Description: 'The number of dedicated master nodes (instances) to use in the Amazon ES domain (set to 0 to disable dedicated master nodes).'
#    Type: Number
#    Default: 3
#    MinValue: 3
#    MaxValue: 5
#  DedicatedMasterType:
#    Description: 'The instance type for your dedicated master nodes.'
#    Type: 'String'
#    Default: 'xsmall'
#    AllowedValues:
#      - xsmall
#      - xsmall-mem
  opSecurityGroup:
    Description: >-
      Specify the security group to be used by OpenSearch, if not provide a default will get created
    Type: String
    Default: ''
  PSsmEnvironment:
    Description: Environment from the SSM parameter
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /platform/account/env
    AllowedValues:
      - /platform/account/env
  KMSArnForSecretManager:
    Type: String
    Description: Enter KMS key (symmetric) arn (Format arn:aws:kms:<region>:<account-ID>:key/<key-id>) to be used for encrypting secrets
    ConstraintDescription: format should be arn:aws:kms:<region>:<account-ID>:key/<key-id>
    Default: arn:aws:kms:eu-central-1:600027353764:key/cec03951-59ac-44a0-94eb-fa5ebd6bcf77
    AllowedPattern: (^arn\:aws\:kms\:.+)
  PSsmSubnetIds:
    Description: >-
      Subnet types in which the instance is to be placed. (possible values: /platform/sharedvpc/private_subnets or /platform/sharedvpc/nr_private_subnets)
    Type: AWS::SSM::Parameter::Value<List<String>>
    Default: /platform/sharedvpc/private_subnets
    AllowedValues:
      - /platform/sharedvpc/nr_private_subnets
      - /platform/sharedvpc/private_subnets
  PSsmNRSubnetCIDRs:
    Description: >-
      LEAVE AS IT IS - Default SG Subnet cidr ranges from non routable subnets of shared VPC.
    Type: AWS::SSM::Parameter::Value<List<String>>
    Default: /platform/sharedvpc/nr_private_subnets_cidrs
    AllowedValues:
      - /platform/sharedvpc/nr_private_subnets_cidrs

#  KMSArnForLogs:
#    Type: String
#    Description: Enter KMS key (symmetric) arn (Format arn:aws:kms:<region>:<account-ID>:key/<key-id>) to be used for encrypt the log data
#    ConstraintDescription: format should be arn:aws:kms:<region>:<account-ID>:key/<key-id>
#    Default: arn:aws:kms:eu-central-1:600027353764:key/096aae3c-0cac-46f1-91ae-291935b2c7c9
#    AllowedPattern: (^arn\:aws\:kms\:.+)
   
#---------------------------------------------------Conditions----------------------------------------------------------#

Conditions:
  IS-No-SG: !Equals 
    - !Ref opSecurityGroup
    - ""

  IS-SG: !Not [!Equals [!Ref opSecurityGroup, ""]]

  IS-Not-Dev: !Not
    - !Equals 
      - !Ref PSsmEnvironment
      - "development"
  
  IS-Dev: !Equals 
    - !Ref PSsmEnvironment
    - "development"

  IS-No-SG-AND-Not-Dev: !And
    - !Condition IS-No-SG
    - !Condition IS-Not-Dev
  
  IS-No-SG-AND-Dev: !And
    - !Condition IS-No-SG
    - !Condition IS-Dev

  Is-mem: !Or [!Equals [ !Ref ClusterInstanceType, "xsmall-mem" ], !Equals [ !Ref ClusterInstanceType, "small-mem" ],!Equals [ !Ref ClusterInstanceType, "medium-mem" ],!Equals [ !Ref ClusterInstanceType, "large-mem" ],!Equals [ !Ref ClusterInstanceType, "xlarge-mem" ]]


 # HasEBSEnabled: !Equals [!Ref EBSEnabled, 'true']
 # HasDedicatedMasterNodes: !Not [!Equals [!Ref DedicatedMasterCount, 0]]
 # HasDedicatedMasterNodes:  IS-Not-Dev
 # HasSingleClusterInstance: !Equals [!Ref ClusterInstanceCount, '1']


 # Subnet1Exist: !Not [ !Equals [!Select [ 0, !Ref PSsmSubnetIds ], '']]
 # Subnet2Exist: !Not [ !Equals [!Select [ 1, !Ref PSsmSubnetIds ], '']]
 # Subnet3Exist: !Not [ !Equals [!Select [ 2, !Ref PSsmSubnetIds ], '']]




#---------------------------------------------------Mappings----------------------------------------------------------#
Mappings:
  Plans:
    xsmall:
      Instance: t3.small.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 100
    small:
      Instance: t3.medium.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 200
    medium:
      Instance: m6g.large.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 512
    large:
      Instance: m6g.xlarge.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 1024
    xlarge:
      Instance: m6g.2xlarge.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 1536
    xsmall-mem:
      Instance: r6g.large.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 1024
    small-mem:
      Instance: r6g.xlarge.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 1536
    medium-mem:
      Instance: r6g.2xlarge.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 3072
    large-mem:
      Instance: r6g.4xlarge.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 6144
    xlarge-mem:
      Instance: r6g.8xlarge.search
      StorageType: gp2
      MinStorage: 10
      MaxStorage: 8192

#-----------------------------------------------------Resources--------------------------------------------------------#

Resources:
  DomainMasterUser:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "{}'\\*[]()`"
        GenerateStringKey: password
        SecretStringTemplate: '{"username":"master-user"}'
      KmsKeyId: !Ref KMSArnForSecretManager
      Tags:
          - Key: 'sc:name'
            Value: !Sub ${DomainName}-${PSsmEnvironment}-secret
          - Key: 'sc:app-uuid'
            Value: '{{resolve:ssm:/platform/account/app-uuid}}'
          - Key: 'sc:env'
            Value: '{{resolve:ssm:/platform/account/env}}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete


#----------------NewSecurityGroup----------------#

  DefaultopSecurityGroupDev:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: IS-No-SG-AND-Dev
    Properties:
      GroupDescription: Open access for OpenSearch
      VpcId: !Sub 
        - '{{resolve:ssm:/platform/sharedvpc/${Environment}/vpc_id}}'
        - Environment: !Ref PSsmEnvironment
      SecurityGroupEgress:
        - IpProtocol: tcp          
          FromPort: 443   
          ToPort: 443
          CidrIp: 0.0.0.0/32
          Description: Open access for OpenSearch Ingress
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Select [0, !Ref PSsmNRSubnetCIDRs ]
          Description: "NR-private subnet 1 cidr range."
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Select [1, !Ref PSsmNRSubnetCIDRs ]
          Description: "NR-private subnet 2 cidr range."
      Tags:
        - Key: 'sc:name'
          Value: !Join ['.', [ !Ref AWS::StackName, !Ref PSsmEnvironment, !Ref AWS::Region, "sg-op", !Sub '{{resolve:ssm:/platform/sharedvpc/${PSsmEnvironment}/vpc_id}}']]
        - Key: 'sc:app-uuid'
          Value: '{{resolve:ssm:/platform/account/app-uuid}}'
        - Key: 'sc:env'
          Value: '{{resolve:ssm:/platform/account/env}}'
  
  DefaultopSecurityGroupStageProd:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: IS-No-SG-AND-Not-Dev
    Properties:
      GroupDescription: Open access for OpenSearch
      VpcId: !Sub 
        - '{{resolve:ssm:/platform/sharedvpc/${Environment}/vpc_id}}'
        - Environment: !Ref PSsmEnvironment
      SecurityGroupEgress:
        - CidrIp: 127.0.0.1/32
          IpProtocol: "-1" 
          Description: "SecurityGroupEgress"
      Tags:
        - Key: 'sc:name'
          Value: !Join ['.', [ !Ref AWS::StackName, !Ref PSsmEnvironment, !Ref AWS::Region, "sg-op", !Sub '{{resolve:ssm:/platform/sharedvpc/${PSsmEnvironment}/vpc_id}}']]
        - Key: 'sc:app-uuid'
          Value: '{{resolve:ssm:/platform/account/app-uuid}}'
        - Key: 'sc:env'
          Value: '{{resolve:ssm:/platform/account/env}}'


#----------------Logs----------------#

  DomainSlowSearchLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub '/aws/opensearch/${DomainName}/DomainSlowLogs'
#      KmsKeyId: !Ref KMSArnForLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    

  OpenSearchLogPolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: opensearch-log-policy
      PolicyDocument: !Sub "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Sid\": \"\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"es.amazonaws.com\"}, \"Action\":[ \"logs:PutLogEvents\",\"logs:PutLogEventsBatch\",\"logs:CreateLogStream\"],\"Resource\": \"arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/opensearch/${DomainName}/*\"}]}"

  DomainSlowIndexLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub '/aws/opensearch/${DomainName}/DomainSlowIndexLogs'
#      KmsKeyId: !Ref KMSArnForLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete


  DomainAppLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub '/aws/opensearch/${DomainName}/DomainAppLogs'
#      KmsKeyId: !Ref KMSArnForLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete


  DomainAuditLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub '/aws/opensearch/${DomainName}/DomainAuditLogs'
#      KmsKeyId: !Ref KMSArnForLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete


#---------------Role-----------------#
  
  ServiceLinkedRole:
    Type: 'AWS::IAM::ServiceLinkedRole'
    Properties:
      AWSServiceName: es.amazonaws.com
      Description: 'Role for ES to access resources in my VPC'

#--------------Open Search Service Domain------------------#
  
  OpenSearchServiceDomain:
    Type: 'AWS::OpenSearchService::Domain'
    Properties:
      DomainName:
        Ref: DomainName
      EngineVersion:
        Ref: EngineVersion
      ClusterConfig:
        DedicatedMasterCount: !If [IS-Not-Dev, 3 , !Ref 'AWS::NoValue']
        DedicatedMasterEnabled: !If [IS-Not-Dev, true, false]
        DedicatedMasterType: !If [IS-Not-Dev, !If [Is-mem , !FindInMap [ Plans, xsmall-mem , Instance ],!FindInMap [ Plans, xsmall, Instance ]] , !Ref 'AWS::NoValue']
#        DedicatedMasterType: !If [IS-Not-Dev, !FindInMap [ Plans, !Ref DedicatedMasterType, Instance ], !Ref 'AWS::NoValue']
        InstanceCount:  !If [IS-Not-Dev, !Ref ClusterInstanceCount, 1]
        InstanceType: !FindInMap 
        - Plans
        - !Ref ClusterInstanceType
        - Instance
        ZoneAwarenessEnabled: !If [IS-Not-Dev, true,false]   
#      EBSOptions: !If
#      - HasEBSEnabled
#      - EBSEnabled: true
#        VolumeSize: !Ref EBSVolumeSize
#        VolumeType: gp2
#      - EBSEnabled: false
      EBSOptions:
        EBSEnabled: true
        VolumeSize: !Ref EBSVolumeSize
        VolumeType: gp2
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Deny
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: '*'
      LogPublishingOptions:
        ES_APPLICATION_LOGS:
          CloudWatchLogsLogGroupArn:
            Fn::GetAtt:
              - DomainAppLogs
              - Arn
          Enabled: true
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn:
            Fn::GetAtt:
              - DomainSlowSearchLogs
              - Arn
          Enabled: true
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn:
            Fn::GetAtt:
              - DomainSlowIndexLogs
              - Arn
          Enabled: true
        AUDIT_LOGS:
          CloudWatchLogsLogGroupArn:
            Fn::GetAtt:
              - DomainAuditLogs
              - Arn
          Enabled: true
      CognitoOptions:
        Enabled: false
      NodeToNodeEncryptionOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: Policy-Min-TLS-1-0-2019-07
      EncryptionAtRestOptions:
        Enabled: true
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: true
        override_main_response_version: true
      Tags:
          - Key: 'sc:name'
            Value: !Sub ${DomainName}-${PSsmEnvironment}-op
          - Key: 'sc:app-uuid'
            Value: '{{resolve:ssm:/platform/account/app-uuid}}'
          - Key: 'sc:env'
            Value: '{{resolve:ssm:/platform/account/env}}'
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: master-user
          MasterUserPassword:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:"
                - Ref: DomainMasterUser
                - :SecretString:password::}}
      VPCOptions:
        SubnetIds:
          'Fn::If':
            - IS-Dev
            - 
              - !Select [ 0, !Ref PSsmSubnetIds ]
            -
              - !Select [ 0, !Ref PSsmSubnetIds ]
              - !Select [ 1, !Ref PSsmSubnetIds ]
#              'Fn::If':
#                - Subnet1Exist
#                -
#                  - !Select [ 0, !Ref PSsmSubnetIds ]
#                  - 'Fn::If':
#                    - Subnet2Exist
#                    -
#                      !Select [ 1, !Ref PSsmSubnetIds ]
#                    - !Ref "AWS::NoValue"
#                  - 'Fn::If':
#                    - Subnet3Exist
#                    -
#                      !Select [ 2, !Ref PSsmSubnetIds ]
#                    - !Ref "AWS::NoValue"

#                - !Ref "AWS::NoValue"           

#              - !Select [ 2, !Ref PSsmSubnetIds ]
#          - subnet-082e89732b12fc727
#          - subnet-09e891313642b7fc6
#          !Split [ "," , "subnet-082e89732b12fc727,subnet-09e891313642b7fc6" ]
#          !Split [ "," , !Sub PSsmSubnetIds ]
#           - !Select [ 0, !Ref PSsmSubnetIds ]
#           - !Select [ 1, !Ref PSsmSubnetIds ]
        SecurityGroupIds:
          'Fn::If':
            - IS-SG
            - 
              - !Ref opSecurityGroup
            - 
              - !If [IS-Not-Dev, !Ref DefaultopSecurityGroupStageProd, !Ref DefaultopSecurityGroupDev] 
    UpdatePolicy:
      EnableVersionUpgrade: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    DependsOn:
    - ServiceLinkedRole

#----------------------------------------------------Outputs---------------------------------------------------------#

Outputs:
  Arn:
    Value:
      'Fn::GetAtt':
        - OpenSearchServiceDomain
        - Arn
  DomainEndpoint:
    Value:
      'Fn::GetAtt':
        - OpenSearchServiceDomain
        - DomainEndpoint
  DBSecurityGroupID:
      Description: 'Database security group Id, will come handy for traffic accesss'
      Value:
        'Fn::If':
          - IS-SG
          - !Ref opSecurityGroup
          - !If [ IS-Not-Dev, !GetAtt DefaultopSecurityGroupStageProd.GroupId ,!GetAtt DefaultopSecurityGroupDev.GroupId ]
  MasterUser:
    Value:
      Ref: DomainMasterUser


