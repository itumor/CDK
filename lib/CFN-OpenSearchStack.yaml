AWSTemplateFormatVersion: 2010-09-09
Description: OpenSearch is a distributed, open-source search and analytics suite used for a broad set of use cases like real-time application monitoring, log analytics, and website search.  
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    -
      Label:
        default: 'OpenSearch Parameters'
      Parameters:
      - DomainName
      - EngineVersion
      - EBSEnabled
      - EBSVolumeSize
      - ClusterInstanceCount
      - ClusterInstanceType
      - DedicatedMasterCount
      - DedicatedMasterType
      - SubDomainNameWithDot
#      - SubnetIds
      - SubnetId
      - opSecurityGroup
      - PSsmEnvironment
      - KMSArnForSecretManager
      - KMSArnForLogs

#-------------------------------------------------------Parameters------------------------------------------------------#

Parameters:
  DomainName:
    Description: 'A name for the Amazon ES domain.'
    Type: String
    Default: 'domainname'
  EBSEnabled:
    Description: 'Specifies whether Amazon EBS volumes are attached to data nodes in the Amazon ES domain (some instance types come with instance store that you can use instead).'
    Type: String
    AllowedValues: [true, false]
    Default: true
  EBSVolumeSize:
    Description: 'The size of the EBS volume for each data node. The minimum and maximum size of an EBS volume depends on the EBS volume type and the instance type to which it is attached.'
    Type: Number
    Default: 10
  EngineVersion:
    Description: 'Elasticsearch version'
    Type: String
    Default: 'OpenSearch_1.2'
    AllowedValues: ["OpenSearch_1.2","OpenSearch_1.1","OpenSearch_1.0","Elasticsearch_7.10","Elasticsearch_7.9","Elasticsearch_7.8","Elasticsearch_7.7","Elasticsearch_7.4","Elasticsearch_7.1","Elasticsearch_6.8","Elasticsearch_6.7","Elasticsearch_6.5","Elasticsearch_6.4","Elasticsearch_6.3","Elasticsearch_6.2","Elasticsearch_6.0","Elasticsearch_5.6","Elasticsearch_5.5","Elasticsearch_5.3","Elasticsearch_5.1","Elasticsearch_2.3","Elasticsearch_1.5"] # aws opensearch list-versions --query "Versions[]" 
  ClusterInstanceCount:
    Description: 'The number of data nodes (instances) to use in the Amazon ES domain.'
    Type: Number
    Default: 1
  ClusterInstanceType:
    Description: 'The instance type for your data nodes.'
    Type: 'String'
    Default: 't3.small.search'
    AllowedValues:
      - xsmall
      - small
      - medium
      - large
      - xlarge
      - xsmall-mem
      - small-mem
      - medium-mem
      - large-mem
      - xlarge-mem
  DedicatedMasterCount:
    Description: 'The number of dedicated master nodes (instances) to use in the Amazon ES domain (set to 0 to disable dedicated master nodes).'
    Type: Number
    Default: 0
  DedicatedMasterType:
    Description: 'The instance type for your dedicated master nodes.'
    Type: 'String'
    Default: 't3.small.search'
    AllowedValues:
      - xsmall
      - small
      - medium
      - large
      - xlarge
      - xsmall-mem
      - small-mem
      - medium-mem
      - large-mem
      - xlarge-mem

  SubDomainNameWithDot:
    Description: 'Name that is used to create the DNS entry with trailing dot, e.g. ยง{SubDomainNameWithDot}ยง{HostedZoneName}. Leave blank for naked (or apex and bare) domain. Requires ParentZoneStack parameter!'
    Type: String
    Default: 'elasticsearch.'
#  SubnetIds:
#    Description: >-
#      List of subnets in which the instance is to be placed; at least two
#      required
#    Type: 'List<AWS::EC2::Subnet::Id>'
  SubnetId:
    Description: >-
      subnets in which the instance is to be placed
      required
    Type: 'AWS::EC2::Subnet::Id'
    Default: 'subnet-082e89732b12fc727'
  opSecurityGroup:
    Description: >-
      Specify the security group to be used by OpenSearch, if not provide a default will get created
    Type: String
    Default: ''
  PSsmEnvironment:
    Description: Environment from the SSM parameter
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /platform/account/env
    AllowedValues:
      - /platform/account/env
  KMSArnForSecretManager:
    Type: String
    Description: Enter KMS key (symmetric) arn (Format arn:aws:kms:<region>:<account-ID>:key/<key-id>) to be used for encrypting secrets
    ConstraintDescription: format should be arn:aws:kms:<region>:<account-ID>:key/<key-id>
    Default: arn:aws:kms:eu-central-1:600027353764:key/cec03951-59ac-44a0-94eb-fa5ebd6bcf77
    AllowedPattern: (^arn\:aws\:kms\:.+)

  KMSArnForLogs:
    Type: String
    Description: Enter KMS key (symmetric) arn (Format arn:aws:kms:<region>:<account-ID>:key/<key-id>) to be used for encrypt the log data
    ConstraintDescription: format should be arn:aws:kms:<region>:<account-ID>:key/<key-id>
    Default: arn:aws:kms:eu-central-1:600027353764:key/096aae3c-0cac-46f1-91ae-291935b2c7c9
    AllowedPattern: (^arn\:aws\:kms\:.+)
    
#---------------------------------------------------Conditions----------------------------------------------------------#

Conditions:
  IS-No-SG: !Equals 
    - !Ref opSecurityGroup
    - ""

  IS-SG: !Not [!Equals [!Ref opSecurityGroup, ""]]
  HasEBSEnabled: !Equals [!Ref EBSEnabled, 'true']
  HasDedicatedMasterNodes: !Not [!Equals [!Ref DedicatedMasterCount, 0]]
  HasSingleClusterInstance: !Equals [!Ref ClusterInstanceCount, '1']


#---------------------------------------------------Mappings----------------------------------------------------------#
Mappings:
  Plans:
    xsmall:
      Instance: t3.small.search
      StorageType: gp2
      MinStorage: 20
      MaxStorage: 100
    small:
      Instance: t3.medium.search
      StorageType: gp2
      MinStorage: 20
      MaxStorage: 200
    medium:
      Instance: m6g.large.search
      StorageType: gp2
      MinStorage: 20
      MaxStorage: 400
    large:
      Instance: m6g.xlarge.search
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 1000
    xlarge:
      Instance: m6g.2xlarge.search
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 2000
    xsmall-mem:
      Instance: r6g.large.search
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 2000
    small-mem:
      Instance: r6g.xlarge.search
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 4000
    medium-mem:
      Instance: r6g.2xlarge.search
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 2000
    large-mem:
      Instance: r6g.4xlarge.search
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 4000
    xlarge-mem:
      Instance: r6g.8xlarge.search
      StorageType: gp2
      MinStorage: 100
      MaxStorage: 4000

#-----------------------------------------------------Resources--------------------------------------------------------#

Resources:
  DomainMasterUser:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: "{}'\\*[]()`"
        GenerateStringKey: password
        SecretStringTemplate: '{"username":"master-user"}'
      KmsKeyId: !Ref KMSArnForSecretManager
      Tags:
          - Key: 'sc:name'
            Value: !Sub ${DomainName}-${PSsmEnvironment}-secret
          - Key: 'sc:app-uuid'
            Value: '{{resolve:ssm:/platform/account/app-uuid}}'
          - Key: 'sc:env'
            Value: '{{resolve:ssm:/platform/account/env}}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  



#-----------------SecurityGroup---------------#

  DefaultopSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: IS-No-SG
    Properties:
      GroupDescription: Open access for OpenSearch
      VpcId: !Sub 
        - '{{resolve:ssm:/platform/sharedvpc/${Environment}/vpc_id}}'
        - Environment: !Ref PSsmEnvironment
      Tags:
        - Key: 'sc:name'
          Value: !Join ['.', [ !Ref AWS::StackName, !Ref PSsmEnvironment, !Ref AWS::Region, "sg-op", !Sub '{{resolve:ssm:/platform/sharedvpc/${PSsmEnvironment}/vpc_id}}']]
        - Key: 'sc:app-uuid'
          Value: '{{resolve:ssm:/platform/account/app-uuid}}'
        - Key: 'sc:env'
          Value: '{{resolve:ssm:/platform/account/env}}'
      SecurityGroupIngress:
        - FromPort: 443
          IpProtocol: tcp
          ToPort: 443
          CidrIp: 0.0.0.0/32
      SecurityGroupEgress:
        - FromPort: 443
          IpProtocol: tcp
          ToPort: 443
          CidrIp: 0.0.0.0/32

#----------------Logs----------------#

  DomainSlowSearchLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub '/aws/opensearch/${DomainName}/DomainSlowLogs'
      KmsKeyId: !Ref KMSArnForLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    

  OpenSearchLogPolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: opensearch-log-policy
      PolicyDocument: !Sub "{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Sid\": \"\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"es.amazonaws.com\"}, \"Action\":[ \"logs:PutLogEvents\",\"logs:PutLogEventsBatch\",\"logs:CreateLogStream\"],\"Resource\": \"arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/opensearch/${DomainName}/*\"}]}"

  DomainSlowIndexLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub '/aws/opensearch/${DomainName}/DomainSlowIndexLogs'
      KmsKeyId: !Ref KMSArnForLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete


  DomainAppLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub '/aws/opensearch/${DomainName}/DomainAppLogs'
      KmsKeyId: !Ref KMSArnForLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete


  DomainAuditLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub '/aws/opensearch/${DomainName}/DomainAuditLogs'
      KmsKeyId: !Ref KMSArnForLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete


#---------------Role-----------------#
  
  ServiceLinkedRole:
    Type: 'AWS::IAM::ServiceLinkedRole'
    Properties:
      AWSServiceName: es.amazonaws.com
      Description: 'Role for ES to access resources in my VPC'

#--------------Open Search Service Domain------------------#
  
  OpenSearchServiceDomain:
    Type: 'AWS::OpenSearchService::Domain'
    Properties:
      DomainName:
        Ref: DomainName
      EngineVersion:
        Ref: EngineVersion
      ClusterConfig:
        DedicatedMasterCount: !If [HasDedicatedMasterNodes, !Ref DedicatedMasterCount, !Ref 'AWS::NoValue']
        DedicatedMasterEnabled: !If [HasDedicatedMasterNodes, true, false]
        DedicatedMasterType: !If [HasDedicatedMasterNodes, !Ref DedicatedMasterType, !Ref 'AWS::NoValue']
        InstanceCount: !Ref ClusterInstanceCount
#        InstanceType: !Ref ClusterInstanceType
        InstanceType: !FindInMap 
        - Plans
        - !Ref ClusterInstanceType
        - Instance
        ZoneAwarenessEnabled: !If [HasSingleClusterInstance, false, true]
      EBSOptions: !If
      - HasEBSEnabled
      - EBSEnabled: true
        VolumeSize: !Ref EBSVolumeSize
        VolumeType: gp2
      - EBSEnabled: false
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Deny
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: '*'
      LogPublishingOptions:
        ES_APPLICATION_LOGS:
          CloudWatchLogsLogGroupArn:
            Fn::GetAtt:
              - DomainAppLogs
              - Arn
          Enabled: true
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn:
            Fn::GetAtt:
              - DomainSlowSearchLogs
              - Arn
          Enabled: true
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn:
            Fn::GetAtt:
              - DomainSlowIndexLogs
              - Arn
          Enabled: true
        AUDIT_LOGS:
          CloudWatchLogsLogGroupArn:
            Fn::GetAtt:
              - DomainAuditLogs
              - Arn
          Enabled: true
      CognitoOptions:
        Enabled: false
      NodeToNodeEncryptionOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: Policy-Min-TLS-1-0-2019-07
      EncryptionAtRestOptions:
        Enabled: true
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: true
        override_main_response_version: true
      Tags:
          - Key: 'sc:name'
            Value: !Sub ${DomainName}-${PSsmEnvironment}-op
          - Key: 'sc:app-uuid'
            Value: '{{resolve:ssm:/platform/account/app-uuid}}'
          - Key: 'sc:env'
            Value: '{{resolve:ssm:/platform/account/env}}'
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: master-user
          MasterUserPassword:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:"
                - Ref: DomainMasterUser
                - :SecretString:password::}}
      VPCOptions:
        SubnetIds:
          - Ref: SubnetId
        SecurityGroupIds:
          'Fn::If':
            - IS-SG
            - 
              - !Ref opSecurityGroup
            - 
              - !Ref DefaultopSecurityGroup
    UpdatePolicy:
      EnableVersionUpgrade: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    DependsOn:
    - DomainMasterUser
    - DefaultopSecurityGroup
    - DomainSlowSearchLogs
    - DomainSlowIndexLogs
    - DomainAppLogs
    - DomainAuditLogs
    - ServiceLinkedRole

#----------------------------------------------------Outputs---------------------------------------------------------#

Outputs:
  Arn:
    Value:
      'Fn::GetAtt':
        - OpenSearchServiceDomain
        - Arn
  DomainEndpoint:
    Value:
      'Fn::GetAtt':
        - OpenSearchServiceDomain
        - DomainEndpoint
  SecurityGroupId:
    Value:
        'Fn::If':
          - IS-SG
          - 
            !Ref opSecurityGroup
          - 
            !Ref DefaultopSecurityGroup
  SubnetId:
    Value:
      Ref: SubnetId
  MasterUser:
    Value:
      Ref: DomainMasterUser

